version: '3.8'

# Docker Compose configuration for Windows with access to local drives
# This configuration allows Docker containers to access Windows drives D:, I:, J:, K:, L:

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: imageviewer-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: image_viewer
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - imageviewer-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: imageviewer-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - imageviewer-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (Optional)
  redis:
    image: redis:7.2-alpine
    container_name: imageviewer-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - imageviewer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ImageViewer API
  imageviewer-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: imageviewer-api
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - MongoDB__ConnectionString=mongodb://admin:password123@mongodb:27017/image_viewer?authSource=admin
      - MongoDB__DatabaseName=image_viewer
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password123
      - RabbitMQ__VirtualHost=/
      - Redis__ConnectionString=redis:6379
      # Windows drive access configuration
      - FileStorage__BasePath=/app/data
      - FileStorage__WindowsDrives=D:/:/app/drives/d,I:/:/app/drives/i,J:/:/app/drives/j,K:/:/app/drives/k,L:/:/app/drives/l
    volumes:
      # Local logs and temp
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./data:/app/data
      # Windows drives mapping
      - D:/:/app/drives/d:rw
      - I:/:/app/drives/i:rw
      - J:/:/app/drives/j:rw
      - K:/:/app/drives/k:rw
      - L:/:/app/drives/l:rw
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - imageviewer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ImageViewer Worker
  imageviewer-worker:
    build:
      context: .
      dockerfile: Dockerfile.Worker
    container_name: imageviewer-worker
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - MongoDB__ConnectionString=mongodb://admin:password123@mongodb:27017/image_viewer?authSource=admin
      - MongoDB__DatabaseName=image_viewer
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password123
      - RabbitMQ__VirtualHost=/
      - Redis__ConnectionString=redis:6379
      # Windows drive access configuration
      - FileStorage__BasePath=/app/data
      - FileStorage__WindowsDrives=D:/:/app/drives/d,I:/:/app/drives/i,J:/:/app/drives/j,K:/:/app/drives/k,L:/:/app/drives/l
    volumes:
      # Local logs and temp
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./data:/app/data
      # Windows drives mapping
      - D:/:/app/drives/d:rw
      - I:/:/app/drives/i:rw
      - J:/:/app/drives/j:rw
      - K:/:/app/drives/k:rw
      - L:/:/app/drives/l:rw
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      imageviewer-api:
        condition: service_healthy
    networks:
      - imageviewer-network
    healthcheck:
      test: ["CMD", "pgrep", "-f", "ImageViewer.Worker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local

networks:
  imageviewer-network:
    driver: bridge
